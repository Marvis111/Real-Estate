const {check,validationResult,sanitizeBody, body} = require("express-validator"),
{User} = require('../model/database'),
bcrypt = require('bcrypt')
//jwt = require('jsonwebtoken')
module.exports = {
    checkInputs:[
        sanitizeBody('email').normalizeEmail({all_lowercase:true,}),
        check('fname','First name is required').notEmpty(),
        check('lname','Last name is required').notEmpty(),
        check('email','Email Address is required').isEmail(),
        check('password','Password is required').notEmpty(),
    ],
    validateInputs:async(req,res,next)=>{
        console.log(req)
        //dont skip the next middle war
        req.skip = false
        const {errors} = validationResult(req);
        if(errors.length > 0){
            req.skip = true
            res.statusCode = 400
            res.locals.redirect = "/signup"
            req.flash('errors',errors);
            next();
        }else{
            if (req.body.password == req.body.comf_password ) {
                try {
                    req.skip = false
                 const hashedPasword = await bcrypt.hash(req.body.password,10);
                 const newUser = await User.create({...req.body,password:hashedPasword});
                 //session
                 req.session.userId = newUser._id;
                 req.session.fname = newUser.fname;
                 req.session.lname = newUser.lname;
                 req.session.email = newUser.email;
                 //
                 const {lname,_id , email,fname} = newUser
                 req.flash('success',{message:`Welcome ${fname}, you are ready to make Purchase`});
                 req.statusCode = 200;
                 res.locals.user = {lname,userId:_id,fname,email}
                 res.locals.redirect = '/';
                 next();
                } catch (error) {
                    req.skip = true;
                    if (error.code === 11000) {
                     req.flash('errors',[{msg:"Email Address Already Exist."}]);
                    }else{
                     req.flash('errors',[{msg:error.message}]);
                    }
                    res.locals.redirect = '/signup';
                    next();
                }
             } else {
                  //skip the next middle ware..
                  req.skip = true;
                  req.flash('errors',[{msg:"Password mismatched"}]);
                  res.locals.redirect = '/signup';
                  next();
             }
        }
        
    },
    saveValidUser:async (req,res,next) =>{
       if (req.skip) {
           next();
       } else {
           try {
               
           } catch (error) {
               
           }
       }
    },
    redirectView: (req,res)=>{
        let redirectView = res.locals.redirect;
        if(redirectView){
            res.redirect(redirectView);
        }
    }
    
}


